@* @model InternalTraining.Models.Exam
@using InternalTraining.Data.Enums

@{
    ViewData["Title"] = "Exam Details";
}

<div class="container-fluid">

    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 text-gray-800">Exam Details</h1>
        <a href="/Admin/Exam/Index" class="btn btn-secondary btn-sm">
            <i class="fas fa-arrow-left"></i> Back to Exams List
        </a>
    </div>

    <!-- Exam Info -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Exam Information</h6>
        </div>
        <div class="card-body">
            <p><strong>Exam Name:</strong> @Model.Name</p>
            <p><strong>Course:</strong> @Model.Chapter?.Course?.Name</p>
            <p><strong>Chapter:</strong> @Model.Chapter?.Name</p>
        </div>
    </div>

    <!-- Questions -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Questions List</h6>
        </div>
        <div class="card-body">
            @if (Model.Questions != null && Model.Questions.Any())
            {
                <ol class="pl-3">
                    @foreach (var question in Model.Questions)
                    {
                        <li class="mb-4">
                            <div class="mb-2">
                                <strong>Question:</strong> @question.Text <br />
                                <strong>Type:</strong>
                                @(question.QuestionType == QuestionType.TrueFalse ? "True / False" : "Multiple Choice")
                            </div>

                            @if (question.Options != null && question.Options.Any())
                            {
                                <ul class="list-group">
                                    @for (int i = 0; i < question.Options.Count; i++)
                                    {
                                        var isCorrect = question.CorrectAnswer == i;
                                        <li class="list-group-item d-flex justify-content-between align-items-center @(isCorrect ? "text-success font-weight-bold" : "")">
                                            @question.Options[i]
                                            @if (isCorrect)
                                            {
                                                <span class="badge badge-success badge-pill">Correct</span>
                                            }
                                        </li>
                                    }
                                </ul>

                                <p class="mt-2"><strong>Correct Answer:</strong> @question.Options[question.CorrectAnswer]</p>
                            }
                            else
                            {
                                <p class="text-muted"><em>No options available.</em></p>
                            }
                        </li>
                    }
                </ol>
            }
            else
            {
                <p class="text-muted"><em>No questions found for this exam.</em></p>
            }
        </div>
    </div>
</div>
 *@ 
 @model InternalTraining.Models.Exam
@using InternalTraining.Data.Enums

@{
    ViewData["Title"] = "Exam Details";
}

<div class="container-fluid">

    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 text-gray-800">Exam Details</h1>
        <a href="/Admin/Exam/Index" class="btn btn-secondary btn-sm">
            <i class="fas fa-arrow-left"></i> Back to Exams List
        </a>
    </div>

    <!-- Exam Info -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Exam Information</h6>
        </div>
        <div class="card-body">
            <p><strong>Exam Name:</strong> @Model.Name</p>
            <p><strong>Course:</strong> @Model.Chapter?.Course?.Name</p>
            <p><strong>Chapter:</strong> @Model.Chapter?.Name</p>
        </div>
    </div>

    <!-- Questions -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Questions List</h6>
        </div>
        <div class="card-body">
            @if (Model.Questions != null && Model.Questions.Any())
            {
                <ol class="pl-3">
                    @foreach (var question in Model.Questions)
                    {
                        <li class="mb-4">
                            <div class="mb-2">
                                <strong >Question:</strong> @question.Text <br />
                                <strong>Type:</strong>
                                @(question.QuestionType == QuestionType.TrueFalse ? "True / False" : "Multiple Choice")
                            </div>

                            @if (question.Options != null && question.Options.Any())
                            {
                                <ul class="list-group">
                                    @for (int i = 0; i < question.Options.Count; i++)
                                    {
                                        var option = question.Options[i];
                                        var isCorrect = question.CorrectAnswer == i;

                                        <li class="list-group-item d-flex justify-content-between align-items-center @(isCorrect ? "text-success font-weight-bold" : "")">
                                            @option.Text
                                            @if (isCorrect)
                                            {
                                                <span class="badge badge-success badge-pill">Correct</span>
                                            }
                                        </li>
                                    }
                                </ul>

                                
                            }
                            else
                            {
                                <p class="text-muted"><em>No options available.</em></p>
                            }
                        </li>
                    }
                </ol>
            }
            else
            {
                <p class="text-muted"><em>No questions found for this exam.</em></p>
            }
        </div>
    </div>
</div>
